import chalk from "chalk";
import { validateConfiguration } from "./configManager.js";
import { OpenAI } from "openai";
import { PromptType, SupportedLanguages } from "./models.js";

/**
 * Generates the language instruction for OpenAI prompts.
 */
function generateLanguageInstruction(langcode) {
  const languageMap = Object.values(SupportedLanguages).reduce((map, lang) => {
    map[lang.code] = lang.name;
    return map;
  }, {});
  const language = languageMap[langcode];
  return `Please respond in ${language}.`;
}

/**
 * Generates the prompt for analyzing code changes.
 */
function generatePrompt(files, promptType, config) {
  const languageInstruction = generateLanguageInstruction(
    config.OPENAI_RESPONSE_LANGUAGE
  );

  const promptMap = {
    [PromptType.ANALYZE]: (file) =>
      `Por favor, analise as altera√ß√µes neste commit. Forne√ßa uma vis√£o geral das modifica√ß√µes realizadas nos arquivos. Verifique se h√° algum erro ou bug aparente nas mudan√ßas e aponte poss√≠veis melhorias ou otimiza√ß√µes que podem ser implementadas. Al√©m disso, sugira boas pr√°ticas que poderiam ser aplicadas para aumentar a qualidade do c√≥digo.
        ${file.filename}:\n${file.content}\n\n${languageInstruction}`,
    [PromptType.CREATE]: (file) =>
      `Analise o conte√∫do do arquivo ${file.filename} abaixo e crie um t√≠tulo e uma mensagem de commit que sigam as melhores pr√°ticas para controle de vers√µes: \n
        ${file.content}\n\n     
        Instru√ß√µes:\n\n
        1. T√≠tulo do Commit
          - Use no m√°ximo 50 caracteres.
          - Comece com um verbo no imperativo (ex.: "Adicionar", "Corrigir", "Remover").
          - Seja espec√≠fico e direto sobre a altera√ß√£o realizada.

        2. Mensagem do Commit:
          - Separe o t√≠tulo e a mensagem com uma linha em branco.
          - Descreva de forma detalhada as altera√ß√µes realizadas.
          - Explique o motivo da altera√ß√£o e como ela impacta o projeto.
          - Use listas ou par√°grafos curtos para organizar a explica√ß√£o.

        Formato da Resposta:

        [T√≠tulo do Commit]
        [Descri√ß√£o detalhada das altera√ß√µes, incluindo o porqu√™ da mudan√ßa e qualquer informa√ß√£o relevante.]

        Restri√ß√µes:
        - N√£o invente informa√ß√µes que n√£o estejam no conte√∫do do arquivo.
        - Use apenas os dados presentes no arquivo como base para criar o t√≠tulo e a mensagem.
        - N√£o inclua informa√ß√µes pessoais ou sens√≠veis no commit.
        - Evite copiar e colar trechos inteiros do arquivo no commit.
        - N√£o use express√µes como **Mensagem do Commit:** ou **T√≠tulo do Commit:** no texto.

        ${languageInstruction}`,
  };

  if (!promptMap[promptType]) {
    throw new Error(`Invalid prompt type: ${promptType}`);
  }

  return files.map(promptMap[promptType]).join("\n\n");
}

/**
 * Analyzes updated code using OpenAI.
 */
export async function analyzeUpdatedCode(
  files,
  promptType = PromptType.ANALYZE
) {
  const config = validateConfiguration();

  const openai = new OpenAI({ apiKey: config.OPENAI_API_KEY });
  const prompt = generatePrompt(files, promptType, config);

  try {
    console.log(chalk.blue("üì§ Sending request to OpenAI..."));
    const response = await openai.chat.completions.create({
      model: config.OPENAI_API_MODEL,
      messages: [{ role: "user", content: prompt }],
      max_tokens: 2000,
    });
    console.log(chalk.green("‚úÖ Response received."));
    return response.choices[0].message.content.trim();
  } catch (error) {
    console.error(chalk.red("‚ùå Error analyzing updated code:", error.message));
    throw error;
  }
}
